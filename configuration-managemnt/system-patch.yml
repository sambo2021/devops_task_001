---
- name: Append lines to /etc/hosts
  hosts: central
  become: true
  gather_facts: no
  tasks:
    - blockinfile:
        path: /etc/hosts
        block: |
          10.0.135.19 branch01
          10.0.154.15 branch02
# # ###### a prove of concept that even branches has no natgateway we can run system patches through central #####
# # - name: remote NGINX
# #   hosts: central
# #   become: true
# #   gather_facts: no
# #   tasks:
# #     - name: Download NGINX package
# #       get_url:
# #         url: "http://nginx.org/packages/mainline/centos/7/x86_64/RPMS/nginx-1.11.0-1.el7.ngx.x86_64.rpm"
# #         dest: "/tmp/nginx-1.11.0-1.el7.ngx.x86_64.rpm"

# # - name: copy from central to branch01
# #   hosts: central
# #   gather_facts: no
# #   vars:
# #     src_file: "/tmp/nginx-1.11.0-1.el7.ngx.x86_64.rpm"
# #   tasks:
# #     -  name: Copy Remote-To-Remote from central to server branch01
# #        copy:
# #            src:  "{{ src_file }}"
# #            dest: "{{ src_file }}"
# #        delegate_to: branch01

# # - name: copy from central to branch02
# #   hosts: central
# #   gather_facts: no
# #   vars:
# #     src_file: "/tmp/nginx-1.11.0-1.el7.ngx.x86_64.rpm"
# #   tasks:
# #     -  name: Copy Remote-To-Remote from central to server branch02
# #        copy:
# #            src:  "{{ src_file }}"
# #            dest: "{{ src_file }}"
# #        delegate_to: branch02
# # ###############################################################################################################
# # - name: install NGINX package on webservers
# #   hosts: branch01
# #   become: true
# #   gather_facts: no
# #   tasks:
# #     - name: Install NGINX package
# #       yum:
# #         name: nginx
# #         state: latest
# #     - name: Ensure NGINX is running
# #       service:
# #         name: nginx
# #         state: started
# #         enabled: yes

# # - name: install NGINX package on webservers
# #   hosts: branch02
# #   become: true
# #   gather_facts: no
# #   tasks:
# #     - name: Install NGINX package
# #       yum:
# #         name: nginx
# #         state: latest
# #     - name: Ensure NGINX is running
# #       service:
# #         name: nginx
# #         state: started
# #         enabled: yes
# # ###############################################################################################################
- name: install docker on central
  hosts: central
  become: true
  gather_facts: no
  tasks:
    - name: Install docker
      yum:
        name: docker
        state: latest
    - name: Ensure docker is running
      service:
        name: docker
        state: started
        enabled: yes

- name: install docker on branch01
  hosts: branch01
  become: true
  gather_facts: no
  tasks:
    - name: Install docker
      yum:
        name: docker
        state: latest
    - name: Ensure docker is running
      service:
        name: docker
        state: started
        enabled: yes

- name: install docker on branch02
  hosts: branch02
  become: true
  gather_facts: no
  tasks:
    - name: Install docker
      yum:
        name: docker
        state: latest
    - name: Ensure docker is running
      service:
        name: docker
        state: started
        enabled: yes

# # - name: install node exporter on branch01
# #   hosts: branch01
# #   become: true
# #   gather_facts: no
# #   tasks:
# #     - name: Install docker
# #       command: "docker run -d -p 9100:9100 --name=node_exporter prom/node-exporter"

- name: install node exporter on branch01
  hosts: branch01
  become: true
  gather_facts: no
  tasks:
  - name: 
    docker_container:
          name: node_exporter
          state: started
          image: "prom/node-exporter"
          pull: true
          ports:
            - "9100:9100"

# # - name: install node exporter on branch02
# #   hosts: branch02
# #   become: true
# #   gather_facts: no
# #   tasks:
# #     - name: Install docker
# #       command: "docker run -d -p 9100:9100 --name=node_exporter prom/node-exporter"

- name: install node exporter on branch02
  hosts: branch02
  become: true
  gather_facts: no
  tasks:
  - name: 
    docker_container:
          name: node_exporter
          state: started
          image: "prom/node-exporter"
          pull: true
          ports:
            - "9100:9100"

- name: configure prome scraping targets
  hosts: central
  become: true
  gather_facts: no
  tasks:
    - command: "touch ./prometheus.yml"
    - blockinfile:
        path: ./prometheus.yml
        block: |
          global:
            scrape_interval: 15s
          scrape_configs:
          - job_name: 'prometheus'
            static_configs:
            - targets: ['localhost:9090']
          - job_name: 'branch01'
            static_configs:
            - targets: ['branch01:9100']
          - job_name: 'branch02'
            static_configs:
            - targets: ['branch02:9100']

- name: create prometheus docker compose
  hosts: central
  become: true
  gather_facts: no
  tasks:
    - command: "touch ./docker-compose.yaml"
    - blockinfile:
        path: ./docker-compose.yaml
        block: |
          services:
            prometheus:
              image: prom/prometheus:latest
              container_name: prometheus
              restart: unless-stopped
              network_mode: "host"
              volumes:
              - "./prometheus.yml:/etc/prometheus/prometheus.yml"

- name: install docker compose on central
  hosts: central
  become: true
  gather_facts: no
  tasks:
    - command: "curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64 -o /usr/local/bin/docker-compose"
    - command: "chmod +x /usr/local/bin/docker-compose"
    - command: "docker-compose version"

- name: run docker compose prometheus on central
  hosts: central
  become: true
  gather_facts: no
  tasks:
    - command: "docker-compose up -d"