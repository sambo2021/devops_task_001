apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: task
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        args:
          - '--web.enable-lifecycle'
          - '--web.external-url=http://localhost:9080/prometheus'
          - '--config.file=/etc/prometheus/prometheus.yml'
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config-volume
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
      volumes:
      - name: prometheus-config-volume
        configMap:
          name: prometheus-config

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: task
spec:
  selector:
    app: prometheus
  ports:
  - port: 8080
    targetPort: 9090
    name: http
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: task
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['prometheus.task:8080']

      - job_name: 'app'
        scrape_interval: 5s
        static_configs:
          - targets: ['app.task:8080']
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: vs-prometheus
  namespace: istio-ingress
spec:
  hosts:
  - "*"
  gateways:
  - ingress-gateway
  http:
  - match:
    - uri:
        prefix: /prometheus
    route:
    - destination:
        host: prometheus.task.svc.cluster.local
        port:
          number: 8080
