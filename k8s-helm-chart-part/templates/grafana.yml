apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: task
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        - name: GF_SERVER_SERVE_FROM_SUB_PATH
          value: "true"
        - name: GF_SERVER_ROOT_URL
          value: "http://localhost:9080/grafana"
        volumeMounts:
        - name: grafana-datasource-volume
          mountPath: /etc/grafana/provisioning/datasource.yml
          subPath: datasource.yml
      volumes:
      - name: grafana-datasource-volume
        configMap:
          name: grafana-datasource

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: task
spec:
  selector:
    app: grafana
  ports:
  - port: 8080
    targetPort: 3000
    name: http
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource
  namespace: task
data:
  datasource.yml: |
    # config file version
    apiVersion: 1

    # list of datasources that should be deleted from the database
    deleteDatasources:
    - name: Prometheus
        orgId: 1

    # list of datasources to insert/update depending
    # whats available in the database
    datasources:
    # <string, required> name of the datasource. Required
    - name: Prometheus
    # <string, required> datasource type. Required
    type: prometheus
    # <string, required> access mode. direct or proxy. Required
    access: proxy
    # <int> org id. will default to orgId 1 if not specified
    orgId: 1
    # <string> url
    url: http://prometheus.task:8080
    # <string> database password, if used
    password:
    # <string> database user, if used
    user:
    # <string> database name, if used
    database:
    # <bool> enable/disable basic auth
    basicAuth: false
    # <string> basic auth username, if used
    basicAuthUser:
    # <string> basic auth password, if used
    basicAuthPassword:
    # <bool> enable/disable with credentials headers
    withCredentials:
    # <bool> mark as default datasource. Max one per org
    isDefault: true
    # <map> fields that will be converted to json and stored in json_data
    jsonData:
        graphiteVersion: "1.1"
        tlsAuth: false
        tlsAuthWithCACert: false
    # <string> json object of data that will be encrypted.
    secureJsonData:
        tlsCACert: "..."
        tlsClientCert: "..."
        tlsClientKey: "..."
    version: 1
    # <bool> allow users to edit datasources from the UI.
    editable: true
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: vs-grafana
  namespace: istio-ingress
spec:
  hosts:
  - "*"
  gateways:
  - ingress-gateway
  http:
  - match:
    - uri:
        prefix: /grafana
    route:
    - destination:
        host: grafana.task.svc.cluster.local
        port:
          number: 8080
